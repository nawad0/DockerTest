# version: '3.9'
# networks:
#   deploy-guide-dev:
#     driver: bridge
# services:
#   app:
#     container_name: deploy
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8000:80"  # Оставляем HTTP порт
#       - "8001:443"  # Изменяем порт на 443 для HTTPS
#     networks: 
#       - deploy-guide-dev
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#       - ASPNETCORE_URLS=https://+:443;http://+:80
#       - ASPNETCORE_Kestrel__Certificates__Default__Password=123
#       - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
#     volumes:
#       - ~/.aspnet/https:/https:ro  # Монтируем директорию с сертификатами в контейнер
# version: '3.9'
# services:

#   sqldata:
#     image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
#     environment:
#         - ACCEPT_EULA=Y
#         - SA_PASSWORD=vV5r9tn0M4@
#     ports:
#         - "1433:1433"
#   web:
#     build: .
#     environment:
#        DbServer: "sqldata"
#        DbPort: "1433"
#        DbName: "bookdb"
#        DbPassword: "vV5r9tn0M4@"
#        DbUser: "SA"
#     ports: 
#       - "8080:80"
#     restart: on-failure
#     depends_on:
#       - sqldata
#     links:
#       - sqldata
version: '3.4'

networks:
  TestingDocker:

services:
  demoappdb:
    container_name: app-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - 8002:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=password@12345#
    networks:
      - TestingDocker
  dockertestserver:
    container_name: docker-test
    image: ${DOCKER_REGISTRY-}docker-test
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8001:80
    depends_on:
      - demoappdb
    environment:
      - DB_HOST=demoappdb
      - DB_NAME=TestingDockerDb
      - DB_SA_PASSWORD=password@12345#
    networks:
      - TestingDocker